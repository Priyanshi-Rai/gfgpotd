
class Solution():
    def solve(self, N, K, GeekNum):
        fib = [0] * (N + 1)
        sum = 0
        for i in range(K):
            fib[i + 1] = GeekNum[i]
            sum += GeekNum[i]
        
        for i in range(K + 1, N + 1):
            fib[i] = sum
            sum += fib[i] - fib[i - K]
        
        return fib[N]

      
      
"""This code defines a function solve that takes in three arguments: N (an integer representing the length of the sequence), K (an integer representing the number of previous elements to be used in the next element), and GeekNum (a list of integers representing the initial sequence of length K). The function computes and returns the Nth element of the sequence generated by the given recurrence relation.

The function first initializes an array fib of length N+1 and sets the sum of the first K elements of the sequence to the variable sum.

Then, for each index i from K+1 up to N, the function sets fib[i] to sum and updates sum to be the sum of the elements from fib[i] down to fib[i-K+1].

Finally, the function returns fib[N]."""
